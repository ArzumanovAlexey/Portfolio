{
	"info": {
		"_postman_id": "8ca12071-44c8-40c9-bf58-54a41728761f",
		"name": "dummyapi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34605784"
	},
	"item": [
		{
			"name": "Получение списка пользователей (get user list)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/user",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание пользователя (create user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var respbody = pm.response.json()\r",
							"console.log(respbody)\r",
							"var test_user_id = respbody.id\r",
							"console.log(test_user_id)\r",
							"pm.collectionVariables.set(\"User_id\", test_user_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"email\": \"{{$randomEmail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/user/create",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение пользователя по id (get user by id)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('id');\r",
							"    pm.expect(responseData).to.have.property('firstName');\r",
							"    pm.expect(responseData).to.have.property('lastName');\r",
							"    pm.expect(responseData).to.have.property('email');\r",
							"    pm.expect(responseData).to.have.property('registerDate');\r",
							"    pm.expect(responseData).to.have.property('updatedDate');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Email is in a valid format\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData.email).to.be.a('string');\r",
							"  pm.expect(responseData.email).to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Email format is not valid\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"First name and last name should be non-empty strings\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.firstName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"First name should not be empty\");\r",
							"    pm.expect(responseData.lastName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Last name should not be empty\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/user/:id",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"user",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{User_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление пользователя (update user)",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"email\": \"mattie_quitzon@hotmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/user/:id",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"user",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{User_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление пользователя (delete user)",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/user/:id",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"user",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{User_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание поста (create post)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"zdorovo\",\r\n    \"image\": \"{{$randomUrl}}\",\r\n    \"likes\": 1,\r\n    \"tags\": \"moscow\",\r\n    \"owner\": \"{{User_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/post/create",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"post",
						"create"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "66486cf013d166b3c6323742",
				"type": "string"
			},
			{
				"key": "key",
				"value": "app-id",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Base_url",
			"value": ""
		},
		{
			"key": "User_id",
			"value": ""
		}
	]
}